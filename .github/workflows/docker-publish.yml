name: Docker CI

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image for testing
        run: docker build --build-arg BUILD_TARGET=test -t nsupdate-test .

      - name: Run Pytest
        # We run pytest directly as the test runner, as the project's tests
        # are written for pytest. We also set the DJANGO_SETTINGS_MODULE
        # explicitly to ensure the correct settings are used for the test run.
        run: >
          docker run --rm --entrypoint=""
          -e DJANGO_SETTINGS_MODULE=nsupdate.settings.dev
          -e DJANGO_SUPERUSER_PASSWORD=ci-test-password
          nsupdate-test pytest --ignore=src/nsupdate/api/_tests/test_api.py --ignore=src/nsupdate/main/_tests/test_dnstools.py

  build-scan-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      security-events: write # for github/codeql-action/upload-sarif

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Create SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ghcr.io/${{ github.repository }}:latest
          format: spdx-json
          output-file: "${{ github.event.repository.name }}-sbom.spdx.json"

      - name: Scan SBOM
        uses: anchore/scan-action@v6
        with:
          sbom: "${{ github.event.repository.name }}-sbom.spdx.json"
          fail-build: true
          severity-cutoff: critical
          output-format: "sarif"
          output-file: "grype-results.sarif"

      - name: Upload vulnerability report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'grype-results.sarif'

      - name: Push Docker image
        run: docker push --all-tags ghcr.io/${{ github.repository }}
